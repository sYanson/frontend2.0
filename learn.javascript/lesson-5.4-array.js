// 1. Что выведет следующий код?

let fruits = ["Яблоки", "Груша", "Апельсин"];

// добавляем новое значение в "копию"
let shoppingCart = fruits;
shoppingCart.push("Банан"); // добавляем 4й элемент

// что в fruits?
alert( fruits.length ); // 4, обе переменные ссылаются на один и тот же массив

// 2. Давайте произведём 5 операций с массивом.

// Создайте массив styles с элементами «Джаз» и «Блюз».
// Добавьте «Рок-н-ролл» в конец.
// Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
// Удалите первый элемент массива и покажите его.
// Вставьте Рэп и Регги в начало массива.
// Массив по ходу выполнения операций:

Джаз, Блюз
Джаз, Блюз, Рок-н-ролл
Джаз, Классика, Рок-н-ролл
Классика, Рок-н-ролл
Рэп, Регги, Классика, Рок-н-ролл

//

let styles = [Джаз, Блюз];
stules.push("Рок-н-ролл");
arr[1] = "Классика"; // в учебнике: styles[Math.floor((styles.length - 1) / 2)],
// но это работает только для массивов с нечетным числом элементов
alert(styles.shift());
styles.unshift("Рэп", "Регги");

// 3. Вызов в контексте массива
// Каков результат? Почему?

let arr = ["a", "b"];

arr.push(function() { // третьим эл-том массива становится функция
  alert( this );
});

arr[2](); // ? ааааааааааааааааа
// я обращаюсь к методу объекта, который показывает мне весь массив, вместе с методом:
a,b,function() {
    alert( this );
}

// 4. Напишите функцию sumInput(), которая:
// Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
// Заканчивает запрашивать значения, когда пользователь введёт не числовое значение, пустую строку или нажмёт «Отмена».
// Подсчитывает и возвращает сумму элементов массива.
// P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».

function sumInput() {
    let arr = [];
    let sum = 0;
    for (let i = 0; i <= arr.length; ++i) {
        let num = +prompt();
        if (typeof !num === "number" || num === "" || num === null) return; // if (num == NaN || num == null) break; 
        arr.push(num); // arr[i] = num;
        sum += arr[i]
    } return sum;
}

/////////////////////////////////////////////////////////////////////////

// 5. 