// 1. Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она запрашивает подтверждение через confirm и возвращает его результат:

function checkAge(age) {
  if (age > 18) {
    return true;
  } else { // если у-е не выполнится, вернется код в else:
    // ...
    return confirm('Родители разрешили?');
  }
}

// Будет ли эта функция работать как-то иначе, если убрать else?

function checkAge(age) {
  if (age > 18) {
    return true;
  }        // если у-е не выполнится, вернется следующий return:
  // ...
  return confirm('Родители разрешили?');
}
// Есть ли хоть одно отличие в поведении этого варианта? кажется, нет


// 2. Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она задаёт вопрос confirm и возвращает его результат.

function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    return confirm('Родители разрешили?');
  }
}
// Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
// Сделайте два варианта функции checkAge:

// Используя оператор ?
  function checkAge(age) {
    let (result = (age > 18)) ? true : confirm('Родители разрешили?'); // если true, то true, иначе false, возвращается вторая часть
  } // ошибка в том, что result принимает true или false, age не меняется

  // Решение учебника:
  function checkAge(age) {
    return (age > 18) ? true : confirm('Родители разрешили?');
  }

// Используя оператор ||
function checkAge(age) {
    return (age > 18 || confirm('Родители разрешили?'); // если age > 18, вернется true, но как сделать, чтобы иначе вернулся false?
  } // ??

  // Решениие учебника: такое же, все верно, почему?

  // 3. Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.
// Пример вызовов:

min(2, 5) == 2
min(3, -1) == -1
min(1, 1) == 1

function min(a, b) {
    if (a < b) {
        return a;
    } else if (b < a) {
        return b;
    } else return;
};

// 4. Напишите функцию pow(x,n), которая возводит x в степень n и возвращает результат.

pow(3, 2) = 3 * 3 = 9
pow(3, 3) = 3 * 3 * 3 = 27
pow(1, 100) = 1 * 1 * ...* 1 = 1

// Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
// P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т.е. целые от 1 и выше.


function pow(x, n) {

    x = prompt(); // работает
    
    if (x > 0 && (x % 1 == 0)) { // если x натур., узнаем n
    
    n = prompt(); // работает
    
        if (n > 0 && (n % 1 == 0)) { // если n натур., умножаем x само на себя n раз
    
            for (let i = 1; i < n; i++) {
                        x *= x;
                }
            alert(x);
            } else alert("Введите натуральные числа"); // если n не натур.
    
        } else alert("Введите натуральные числа"); // если x не натур.
    
    };